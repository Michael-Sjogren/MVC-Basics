// <auto-generated />
using MVCBasics.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MVCBasics.Migrations
{
    [DbContext(typeof(PeopleContext))]
    [Migration("20211202125244_intro2")]
    partial class intro2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("MVCBasics.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Göteborg",
                            Name = "Michael Sjögren",
                            PhoneNumber = "555-321-325"
                        },
                        new
                        {
                            Id = 2,
                            City = "Stockholm",
                            Name = "Anna",
                            PhoneNumber = "555-752-325"
                        },
                        new
                        {
                            Id = 3,
                            City = "Oslo",
                            Name = "Hamid",
                            PhoneNumber = "555-233-325"
                        },
                        new
                        {
                            Id = 4,
                            City = "Uppsala",
                            Name = "Lena",
                            PhoneNumber = "555-456-134"
                        },
                        new
                        {
                            Id = 5,
                            City = "Göteborg",
                            Name = "Jens",
                            PhoneNumber = "555-999-325"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
